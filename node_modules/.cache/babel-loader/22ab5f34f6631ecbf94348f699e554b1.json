{"ast":null,"code":"var _jsxFileName = \"/Users/makkiahmuhammad/Desktop/ZTM/ReactJS/robofriends/The-States/src/Components/cardlist.js\";\nimport React from \"react\"; //import {robots} from \"./robots.js\";  <-- CardList doesnt need this import since index.js ..\n//... defined robot and since robots was destructured and added as a parameter here.\n// Otherwise neither would be needed and an import statement would suffice.\n\nimport Card from \"./card.js\";\n\nconst CardList = ({\n  robots\n}) => {\n  // When you loop you need to give it a unique key property. As shown above with 'key={i}'\n  // The key property should hav something that doesnt change. For ex, index (i) could change if array items get moved..\n  // ..So a better key in this case would be something unique like id. 'key=robots[i].id'\n  // This helps react and the dom keep track of whats supposed to appear and whats not or whats changed. \n  // cardComponent iterates/maps through robots and returns each index value.\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, robots.map((user, i) => {\n    return React.createElement(Card, {\n      key: robots[i].id,\n      id: robots[i].id,\n      name: robots[i].name,\n      email: robots[i].email,\n      image: robots[i].image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default CardList;","map":{"version":3,"sources":["/Users/makkiahmuhammad/Desktop/ZTM/ReactJS/robofriends/The-States/src/Components/cardlist.js"],"names":["React","Card","CardList","robots","map","user","i","id","name","email","image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAC3B;AACA;AACA;AACA;AACA;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,MAAM,CAACC,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,KAAa;AACpB,WAAO,oBAAC,IAAD;AACP,MAAA,GAAG,EAAEH,MAAM,CAACG,CAAD,CAAN,CAAUC,EADR;AAEP,MAAA,EAAE,EAAEJ,MAAM,CAACG,CAAD,CAAN,CAAUC,EAFP;AAGP,MAAA,IAAI,EAAEJ,MAAM,CAACG,CAAD,CAAN,CAAUE,IAHT;AAIP,MAAA,KAAK,EAAEL,MAAM,CAACG,CAAD,CAAN,CAAUG,KAJV;AAKP,MAAA,KAAK,EAAEN,MAAM,CAACG,CAAD,CAAN,CAAUI,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAOH,GARD,CAFR,CADJ;AAiBH,CAvBD;;AAyBA,eAAeR,QAAf","sourcesContent":["import React from \"react\";\n//import {robots} from \"./robots.js\";  <-- CardList doesnt need this import since index.js ..\n//... defined robot and since robots was destructured and added as a parameter here.\n// Otherwise neither would be needed and an import statement would suffice.\nimport Card from \"./card.js\";\n\n\n\nconst CardList = ({robots}) => {\n    // When you loop you need to give it a unique key property. As shown above with 'key={i}'\n    // The key property should hav something that doesnt change. For ex, index (i) could change if array items get moved..\n    // ..So a better key in this case would be something unique like id. 'key=robots[i].id'\n    // This helps react and the dom keep track of whats supposed to appear and whats not or whats changed. \n    // cardComponent iterates/maps through robots and returns each index value.\n    return (\n        <div>\n            {\n                robots.map((user, i) => {\n                    return <Card \n                    key={robots[i].id} \n                    id={robots[i].id} \n                    name={robots[i].name} \n                    email={robots[i].email}  \n                    image={robots[i].image} \n                    />\n                })\n            }\n            {// Curley braces tells javascript to evaluate the vairiable.\n            }\n        </div>\n    );\n}\n\nexport default CardList;"]},"metadata":{},"sourceType":"module"}